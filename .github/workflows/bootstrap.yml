name: Android CI — Build installable APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3g -Dfile.encoding=UTF-8"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Install Android SDK cmdline-tools
        run: |
          set -euxo pipefail
          mkdir -p "$ANDROID_HOME"
          curl -sLo /tmp/cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q /tmp/cmdline-tools.zip -d "$ANDROID_HOME/cmdline-tools"
          mv "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/latest"
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
          echo "$ANDROID_HOME/platform-tools" >> "$GITHUB_PATH"

      - name: Accept licenses & install SDK packages
        run: |
          set -euxo pipefail
          sdkmanager --sdk_root="${ANDROID_HOME}" --licenses <<<"y"
          sdkmanager --sdk_root="${ANDROID_HOME}" \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0"

      - name: Write local.properties
        run: echo "sdk.dir=${ANDROID_HOME}" > local.properties

      - name: Make gradlew executable
        run: |
          set -euxo pipefail
          test -x ./gradlew || chmod +x ./gradlew

      # ❗ ให้ล้มเหลวจริงถ้า build ไม่ผ่าน (ไม่มี || true อีกต่อไป)
      - name: Build Debug APK
        run: |
          set -euxo pipefail
          ./gradlew --warning-mode=all --stacktrace clean :app:assembleDebug

      - name: List APK outputs
        id: list_apk
        run: |
          shopt -s globstar nullglob
          mapfile -t apks < <(printf "%s\n" **/build/outputs/apk/**/*.apk)
          echo "Found ${#apks[@]} APK(s):"
          printf '%s\n' "${apks[@]}"
          printf '%s\n' "${apks[@]}" > apk-list.txt

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: |
            app/build/outputs/apk/debug/*.apk
            **/build/outputs/apk/**/*.apk
          if-no-files-found: error
          retention-days: 14
