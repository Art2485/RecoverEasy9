name: Android CI — Build installable APK

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3g -Dfile.encoding=UTF-8"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # ติดตั้ง Android SDK แบบทางการ ครบทั้ง cmdline-tools + licenses
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # เขียน local.properties ให้ Gradle มอง SDK เจอแน่นอน
      - name: Write local.properties (sdk.dir)
        run: echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      # เปิดแคช Gradle ให้ build เร็วขึ้น และไม่เช็ค wrapper เข้มเกินไป
      - name: Cache Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          validate-wrappers: false
          gradle-home-cache-cleanup: true

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Kill Gradle & clean
        run: |
          ./gradlew --stop || true
          ./gradlew clean

      # สั่ง build + เก็บ log แบบละเอียด
      - name: Build Debug APK (installable)
        id: build
        run: |
          set -o pipefail
          ./gradlew --warning-mode=all --stacktrace --info :app:assembleDebug | tee buildlog.txt

      # อัปโหลด log เสมอ เพื่อดู error ต้นเหตุได้ชัด
      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: buildlog
          path: buildlog.txt

      # อัปโหลด APK เมื่อ build ผ่าน
      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/*.apk
