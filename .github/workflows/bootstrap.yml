name: Android CI — Build installable APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3g -Dfile.encoding=UTF-8"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Install Android SDK cmdline-tools
        run: |
          set -e
          mkdir -p "$ANDROID_HOME"
          curl -sLo /tmp/cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q /tmp/cmdline-tools.zip -d "$ANDROID_HOME/cmdline-tools"
          mv "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/latest"
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
          echo "$ANDROID_HOME/platform-tools" >> "$GITHUB_PATH"

      - name: Accept licenses & install SDK packages
        run: |
          set -e
          sdkmanager --sdk_root="${ANDROID_HOME}" --licenses <<<"y"
          sdkmanager --sdk_root="${ANDROID_HOME}" \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0"

      - name: Write local.properties
        run: echo "sdk.dir=${ANDROID_HOME}" > local.properties

      # ✅ ซ่อม/สร้าง Gradle wrapper อัตโนมัติถ้าพังหรือไม่มี
      - name: Recreate Gradle wrapper if missing/broken
        shell: bash
        run: |
          set -e
          NEED=0
          # ไม่มีไฟล์ หรือลายเซ็นบรรทัดแรกไม่ใช่ shebang ของ gradle wrapper
          if [ ! -f ./gradlew ]; then NEED=1; fi
          if [ -f ./gradlew ] && ! head -n1 ./gradlew | grep -qE '^#!.*/(env )?sh'; then NEED=1; fi
          # jar ของ wrapper หายก็ถือว่าพัง
          if [ ! -f gradle/wrapper/gradle-wrapper.jar ]; then NEED=1; fi

          if [ "$NEED" -eq 1 ]; then
            echo "Gradle wrapper missing/broken -> creating fresh wrapper (8.9)…"
            # ติดตั้ง Gradle แบบชั่วคราวด้วย SDKMAN (ไม่ใช้ -u เพื่อเลี่ยง unbound variable)
            curl -s https://get.sdkman.io | bash >/dev/null
            source "$HOME/.sdkman/bin/sdkman-init.sh"
            sdk install gradle 8.9 >/dev/null
            gradle wrapper --gradle-version 8.9 --distribution-type all
          fi

          chmod +x ./gradlew

      # (เลือกได้) ตรวจ wrapper ให้ชัวร์
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Build Debug APK
        run: |
          set -e
          ./gradlew --warning-mode=all --stacktrace clean :app:assembleDebug

      - name: List APK outputs
        run: |
          shopt -s globstar nullglob
          printf "%s\n" **/build/outputs/apk/**/*.apk | tee apk-list.txt

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: |
            app/build/outputs/apk/debug/*.apk
            **/build/outputs/apk/**/*.apk
          if-no-files-found: error
          retention-days: 14
