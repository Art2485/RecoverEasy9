name: Android CI — Build installable APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx2g -Dfile.encoding=UTF-8"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # ----- ติดตั้ง Android cmdline-tools แบบชัวร์ -----
      - name: Install Android SDK tools
        shell: bash
        run: |
          set -e
          mkdir -p "${ANDROID_HOME}/cmdline-tools"
          curl -sLo /tmp/cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q /tmp/cmdline-tools.zip -d "${ANDROID_HOME}/cmdline-tools"
          # โครงสร้าง zip จะได้โฟลเดอร์ชื่อ cmdline-tools ให้ย้ายไปเป็น latest
          rm -rf "${ANDROID_HOME}/cmdline-tools/latest"
          mv "${ANDROID_HOME}/cmdline-tools/cmdline-tools" "${ANDROID_HOME}/cmdline-tools/latest"
          echo "${ANDROID_HOME}/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
          echo "${ANDROID_HOME}/platform-tools" >> "$GITHUB_PATH"

      - name: Accept licenses & install SDK packages
        shell: bash
        run: |
          set -e
          SDKM="${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager"
          yes | "$SDKM" --sdk_root="${ANDROID_HOME}" --licenses >/dev/null || true
          "$SDKM" --sdk_root="${ANDROID_HOME}" \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0"

      - name: Write local.properties (sdk.dir)
        shell: bash
        run: |
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
          cat local.properties

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # ----- ใช้ setup-gradle แต่ "ปิด" การตรวจ wrapper JAR เพื่อไม่ให้ fail -----
      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v4
        with:
          validate-wrappers: false
          gradle-home-cache-cleanup: true

      - name: Build Debug APK (robust fallback)
        run: |
          ./gradlew --warning-mode=all --stacktrace --info clean :app:assembleDebug

      # ถ้าสร้าง apk ได้ จะอัปโหลดเป็น artifact
      - name: Upload APK (if exists)
        if: ${{ hashFiles('app/build/outputs/apk/debug/app-debug.apk') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      # log ติดตัวเสมอ
      - name: Upload build log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: |
            **/build/*.log
            **/out/**/*
            **/*.sarif
          if-no-files-found: ignore
